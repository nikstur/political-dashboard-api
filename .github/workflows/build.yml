name: build

on: [push, pull_request]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Set Python Version Env Variable
        run: |
          echo "PYTHON_VERSION<<EOF" >> $GITHUB_ENV
          python -c "import sys; print('-'.join(str(v) for v in sys.version_info))" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('.pre-commit-config.yaml') }}

      - uses: pre-commit/action@v2.0.0

  test:
    needs: pre-commit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: [ingester/, api/]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Set Python Version Env Variable
        run: |
          echo "PYTHON_VERSION<<EOF" >> $GITHUB_ENV
          python -c "import sys; print('-'.join(str(v) for v in sys.version_info))" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Install Poetry
        shell: bash
        run: |
          curl -fsS -o get-poetry.py https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py
          python get-poetry.py -y
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Configure poetry
        run: poetry config virtualenvs.in-project true

      - name: Set up Cache
        env:
          LOCK_FILE: ${{ matrix.directory }}poetry.lock
        uses: actions/cache@v2
        with:
          path: ${{ matrix.directory }}/.venv
          key: venv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles(env.LOCK_FILE) }}

      - name: Install dependencies
        working-directory: ${{ matrix.directory }}
        run: poetry install

      - name: Run pytest
        working-directory: ${{ matrix.directory }}
        run: poetry run pytest -q -p no:warnings tests

  build:
    needs: [pre-commit, test]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: [ingester/, api/]
    steps:
      - uses: actions/checkout@v2

      - uses: docker/setup-buildx-action@v1

      - uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.directory }}
